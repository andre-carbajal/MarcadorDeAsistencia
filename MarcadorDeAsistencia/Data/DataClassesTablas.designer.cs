#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarcadorDeAsistencia.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_asistencia")]
	public partial class DataClassesTablasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertFecha(Fecha instance);
    partial void UpdateFecha(Fecha instance);
    partial void DeleteFecha(Fecha instance);
    partial void InsertRegistroDiario(RegistroDiario instance);
    partial void UpdateRegistroDiario(RegistroDiario instance);
    partial void DeleteRegistroDiario(RegistroDiario instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    #endregion
		
		public DataClassesTablasDataContext() : 
				base(global::MarcadorDeAsistencia.Properties.Settings.Default.db_asistenciaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTablasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTablasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTablasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTablasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Fecha> Fecha
		{
			get
			{
				return this.GetTable<Fecha>();
			}
		}
		
		public System.Data.Linq.Table<RegistroDiario> RegistroDiario
		{
			get
			{
				return this.GetTable<RegistroDiario>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fecha")]
	public partial class Fecha : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFecha;
		
		private string _dia;
		
		private string _mes;
		
		private string _ano;
		
		private EntitySet<RegistroDiario> _RegistroDiario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFechaChanging(int value);
    partial void OnidFechaChanged();
    partial void OndiaChanging(string value);
    partial void OndiaChanged();
    partial void OnmesChanging(string value);
    partial void OnmesChanged();
    partial void OnanoChanging(string value);
    partial void OnanoChanged();
    #endregion
		
		public Fecha()
		{
			this._RegistroDiario = new EntitySet<RegistroDiario>(new Action<RegistroDiario>(this.attach_RegistroDiario), new Action<RegistroDiario>(this.detach_RegistroDiario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFecha", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFecha
		{
			get
			{
				return this._idFecha;
			}
			set
			{
				if ((this._idFecha != value))
				{
					this.OnidFechaChanging(value);
					this.SendPropertyChanging();
					this._idFecha = value;
					this.SendPropertyChanged("idFecha");
					this.OnidFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dia", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string dia
		{
			get
			{
				return this._dia;
			}
			set
			{
				if ((this._dia != value))
				{
					this.OndiaChanging(value);
					this.SendPropertyChanging();
					this._dia = value;
					this.SendPropertyChanged("dia");
					this.OndiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mes", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string mes
		{
			get
			{
				return this._mes;
			}
			set
			{
				if ((this._mes != value))
				{
					this.OnmesChanging(value);
					this.SendPropertyChanging();
					this._mes = value;
					this.SendPropertyChanged("mes");
					this.OnmesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ano", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string ano
		{
			get
			{
				return this._ano;
			}
			set
			{
				if ((this._ano != value))
				{
					this.OnanoChanging(value);
					this.SendPropertyChanging();
					this._ano = value;
					this.SendPropertyChanged("ano");
					this.OnanoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fecha_RegistroDiario", Storage="_RegistroDiario", ThisKey="idFecha", OtherKey="idFecha")]
		public EntitySet<RegistroDiario> RegistroDiario
		{
			get
			{
				return this._RegistroDiario;
			}
			set
			{
				this._RegistroDiario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RegistroDiario(RegistroDiario entity)
		{
			this.SendPropertyChanging();
			entity.Fecha = this;
		}
		
		private void detach_RegistroDiario(RegistroDiario entity)
		{
			this.SendPropertyChanging();
			entity.Fecha = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistroDiario")]
	public partial class RegistroDiario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFecha;
		
		private string _idEmpleado;
		
		private System.Nullable<System.TimeSpan> _horaEntrada;
		
		private System.Nullable<System.TimeSpan> _inicioDescanso;
		
		private System.Nullable<System.TimeSpan> _finDescanso;
		
		private System.Nullable<System.TimeSpan> _horaSalida;
		
		private EntityRef<Fecha> _Fecha;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFechaChanging(int value);
    partial void OnidFechaChanged();
    partial void OnidEmpleadoChanging(string value);
    partial void OnidEmpleadoChanged();
    partial void OnhoraEntradaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnhoraEntradaChanged();
    partial void OninicioDescansoChanging(System.Nullable<System.TimeSpan> value);
    partial void OninicioDescansoChanged();
    partial void OnfinDescansoChanging(System.Nullable<System.TimeSpan> value);
    partial void OnfinDescansoChanged();
    partial void OnhoraSalidaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnhoraSalidaChanged();
    #endregion
		
		public RegistroDiario()
		{
			this._Fecha = default(EntityRef<Fecha>);
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFecha", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFecha
		{
			get
			{
				return this._idFecha;
			}
			set
			{
				if ((this._idFecha != value))
				{
					if (this._Fecha.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFechaChanging(value);
					this.SendPropertyChanging();
					this._idFecha = value;
					this.SendPropertyChanged("idFecha");
					this.OnidFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Char(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_horaEntrada", DbType="Time")]
		public System.Nullable<System.TimeSpan> horaEntrada
		{
			get
			{
				return this._horaEntrada;
			}
			set
			{
				if ((this._horaEntrada != value))
				{
					this.OnhoraEntradaChanging(value);
					this.SendPropertyChanging();
					this._horaEntrada = value;
					this.SendPropertyChanged("horaEntrada");
					this.OnhoraEntradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inicioDescanso", DbType="Time")]
		public System.Nullable<System.TimeSpan> inicioDescanso
		{
			get
			{
				return this._inicioDescanso;
			}
			set
			{
				if ((this._inicioDescanso != value))
				{
					this.OninicioDescansoChanging(value);
					this.SendPropertyChanging();
					this._inicioDescanso = value;
					this.SendPropertyChanged("inicioDescanso");
					this.OninicioDescansoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finDescanso", DbType="Time")]
		public System.Nullable<System.TimeSpan> finDescanso
		{
			get
			{
				return this._finDescanso;
			}
			set
			{
				if ((this._finDescanso != value))
				{
					this.OnfinDescansoChanging(value);
					this.SendPropertyChanging();
					this._finDescanso = value;
					this.SendPropertyChanged("finDescanso");
					this.OnfinDescansoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_horaSalida", DbType="Time")]
		public System.Nullable<System.TimeSpan> horaSalida
		{
			get
			{
				return this._horaSalida;
			}
			set
			{
				if ((this._horaSalida != value))
				{
					this.OnhoraSalidaChanging(value);
					this.SendPropertyChanging();
					this._horaSalida = value;
					this.SendPropertyChanged("horaSalida");
					this.OnhoraSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fecha_RegistroDiario", Storage="_Fecha", ThisKey="idFecha", OtherKey="idFecha", IsForeignKey=true)]
		public Fecha Fecha
		{
			get
			{
				return this._Fecha.Entity;
			}
			set
			{
				Fecha previousValue = this._Fecha.Entity;
				if (((previousValue != value) 
							|| (this._Fecha.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fecha.Entity = null;
						previousValue.RegistroDiario.Remove(this);
					}
					this._Fecha.Entity = value;
					if ((value != null))
					{
						value.RegistroDiario.Add(this);
						this._idFecha = value.idFecha;
					}
					else
					{
						this._idFecha = default(int);
					}
					this.SendPropertyChanged("Fecha");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_RegistroDiario", Storage="_Empleado", ThisKey="idEmpleado", OtherKey="idEmpleado", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.RegistroDiario.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.RegistroDiario.Add(this);
						this._idEmpleado = value.idEmpleado;
					}
					else
					{
						this._idEmpleado = default(string);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idEmpleado;
		
		private string _nombreEmpleado;
		
		private string _apellidoEmpleado;
		
		private int _idRol;
		
		private int _idTurno;
		
		private EntitySet<RegistroDiario> _RegistroDiario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmpleadoChanging(string value);
    partial void OnidEmpleadoChanged();
    partial void OnnombreEmpleadoChanging(string value);
    partial void OnnombreEmpleadoChanged();
    partial void OnapellidoEmpleadoChanging(string value);
    partial void OnapellidoEmpleadoChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnidTurnoChanging(int value);
    partial void OnidTurnoChanged();
    #endregion
		
		public Empleado()
		{
			this._RegistroDiario = new EntitySet<RegistroDiario>(new Action<RegistroDiario>(this.attach_RegistroDiario), new Action<RegistroDiario>(this.detach_RegistroDiario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Char(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreEmpleado", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombreEmpleado
		{
			get
			{
				return this._nombreEmpleado;
			}
			set
			{
				if ((this._nombreEmpleado != value))
				{
					this.OnnombreEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._nombreEmpleado = value;
					this.SendPropertyChanged("nombreEmpleado");
					this.OnnombreEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidoEmpleado", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string apellidoEmpleado
		{
			get
			{
				return this._apellidoEmpleado;
			}
			set
			{
				if ((this._apellidoEmpleado != value))
				{
					this.OnapellidoEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._apellidoEmpleado = value;
					this.SendPropertyChanged("apellidoEmpleado");
					this.OnapellidoEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTurno", DbType="Int NOT NULL")]
		public int idTurno
		{
			get
			{
				return this._idTurno;
			}
			set
			{
				if ((this._idTurno != value))
				{
					this.OnidTurnoChanging(value);
					this.SendPropertyChanging();
					this._idTurno = value;
					this.SendPropertyChanged("idTurno");
					this.OnidTurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_RegistroDiario", Storage="_RegistroDiario", ThisKey="idEmpleado", OtherKey="idEmpleado")]
		public EntitySet<RegistroDiario> RegistroDiario
		{
			get
			{
				return this._RegistroDiario;
			}
			set
			{
				this._RegistroDiario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RegistroDiario(RegistroDiario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_RegistroDiario(RegistroDiario entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
}
#pragma warning restore 1591
